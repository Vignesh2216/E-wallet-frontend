{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/wallet';\nconst walletService = {\n  createWallet: async userId => {\n    try {\n      const response = await axios.post(`${API_URL}/create?userId=${userId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Failed to create wallet';\n    }\n  },\n  getBalance: async userId => {\n    try {\n      const response = await axios.get(`${API_URL}/balance?userId=${userId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Failed to get balance';\n    }\n  },\n  topUpWallet: async (userId, amount) => {\n    try {\n      const response = await axios.post(`${API_URL}/topup?userId=${userId}`, {\n        amount\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Failed to top up wallet';\n    }\n  },\n  transferMoney: async (senderUserId, receiverEmail, amount) => {\n    try {\n      const response = await axios.post(`${API_URL}/transfer?senderUserId=${senderUserId}`, {\n        receiverEmail,\n        amount\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || 'Failed to transfer money';\n    }\n  },\n  getTransactions: async userId => {\n    try {\n      const response = await axios.get(`${API_URL}/transactions?userId=${userId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || 'Failed to get transactions';\n    }\n  },\n  getWalletInfo: async userId => {\n    try {\n      const response = await axios.get(`${API_URL}/wallet-info?userId=${userId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || 'Failed to get wallet info';\n    }\n  }\n};\nexport default walletService;","map":{"version":3,"names":["axios","API_URL","walletService","createWallet","userId","response","post","data","error","_error$response","getBalance","get","_error$response2","topUpWallet","amount","_error$response3","transferMoney","senderUserId","receiverEmail","_error$response4","getTransactions","_error$response5","getWalletInfo","_error$response6"],"sources":["C:/Users/bsvig/Desktop/e-wallet/5ab7f7a9-d365-48dd-aa96-dadaec3c626b-88d9e730-a465-4542-a532-35fa497d8ebe/reactapp/src/services/walletService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst API_URL = 'http://localhost:8080/api/wallet';\r\n\r\nconst walletService = {\r\n  createWallet: async (userId) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/create?userId=${userId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to create wallet';\r\n    }\r\n  },\r\n\r\n  getBalance: async (userId) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/balance?userId=${userId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to get balance';\r\n    }\r\n  },\r\n\r\n  topUpWallet: async (userId, amount) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/topup?userId=${userId}`, { amount });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to top up wallet';\r\n    }\r\n  },\r\n\r\n  transferMoney: async (senderUserId, receiverEmail, amount) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/transfer?senderUserId=${senderUserId}`, {\r\n        receiverEmail,\r\n        amount\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to transfer money';\r\n    }\r\n  },\r\n\r\n  getTransactions: async (userId) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/transactions?userId=${userId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to get transactions';\r\n    }\r\n  },\r\n\r\n  getWalletInfo: async (userId) => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/wallet-info?userId=${userId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to get wallet info';\r\n    }\r\n  }\r\n};\r\n\r\nexport default walletService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}