{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/wallet';\nconst getAuthHeader = () => {\n  const token = localStorage.getItem('token');\n  return {\n    Authorization: `Bearer ${token}`\n  };\n};\nconst walletService = {\n  createWallet: async () => {\n    try {\n      const response = await axios.post(`${API_URL}/create`, {}, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Failed to create wallet';\n    }\n  },\n  getBalance: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/balance`, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || 'Failed to get balance';\n    }\n  },\n  topUpWallet: async amount => {\n    try {\n      const response = await axios.post(`${API_URL}/topup`, {\n        amount\n      }, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || 'Failed to top up wallet';\n    }\n  },\n  transferMoney: async (receiverWalletNumber, amount) => {\n    try {\n      const response = await axios.post(`${API_URL}/transfer`, {\n        receiverWalletNumber,\n        amount\n      }, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || 'Failed to transfer money';\n    }\n  },\n  getTransactions: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/transactions`, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response5;\n      throw ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data) || 'Failed to get transactions';\n    }\n  },\n  getWalletInfo: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/wallet-info`, {\n        headers: getAuthHeader()\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response6;\n      throw ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.data) || 'Failed to get wallet info';\n    }\n  }\n};\nexport default walletService;","map":{"version":3,"names":["axios","API_URL","getAuthHeader","token","localStorage","getItem","Authorization","walletService","createWallet","response","post","headers","data","error","_error$response","getBalance","get","_error$response2","topUpWallet","amount","_error$response3","transferMoney","receiverWalletNumber","_error$response4","getTransactions","_error$response5","getWalletInfo","_error$response6"],"sources":["C:/Users/bsvig/Desktop/e-wallet/5ab7f7a9-d365-48dd-aa96-dadaec3c626b-88d9e730-a465-4542-a532-35fa497d8ebe/reactapp/src/services/walletService.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api/wallet';\r\n\r\nconst getAuthHeader = () => {\r\n  const token = localStorage.getItem('token');\r\n  return { Authorization: `Bearer ${token}` };\r\n};\r\n\r\nconst walletService = {\r\n  createWallet: async () => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/create`, {}, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to create wallet';\r\n    }\r\n  },\r\n\r\n  getBalance: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/balance`, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to get balance';\r\n    }\r\n  },\r\n\r\n  topUpWallet: async (amount) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/topup`, { amount }, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to top up wallet';\r\n    }\r\n  },\r\n\r\n  transferMoney: async (receiverWalletNumber, amount) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/transfer`, {\r\n        receiverWalletNumber,\r\n        amount\r\n      }, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to transfer money';\r\n    }\r\n  },\r\n\r\n  getTransactions: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/transactions`, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to get transactions';\r\n    }\r\n  },\r\n\r\n  getWalletInfo: async () => {\r\n    try {\r\n      const response = await axios.get(`${API_URL}/wallet-info`, {\r\n        headers: getAuthHeader()\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || 'Failed to get wallet info';\r\n    }\r\n  }\r\n};\r\n\r\nexport default walletService;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}